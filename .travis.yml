language: cpp
compiler: gcc
sudo: require
dist: trusty

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y
  - sudo apt-get update -qq

install:
  - sudo apt-get -y install qt510base libgl1-mesa-dev
  - source /opt/qt*/bin/qt*-env.sh

script:
  # Build the shared library written in Go 
  - unset GOARCH GOBIN GOEXE GOHOSTARCH GOHOSTOS GOOS GORACE GOROOT GOTOOLDIR CC GOGCCFLAGS CGO_ENABLED
  - export PATH=/usr/local/bin:$PATH
  - export GOPATH=$HOME/go
  - export GO111MODULE=on
  - export COMMIT="${TRAVIS_BUILD_NUMBER}" # "${TRAVIS_JOB_WEB_URL} on $(date +'%Y-%m-%d_%T')"
  - export VERSION=$TRAVIS_BUILD_NUMBER
  - if [ "aarch64" == "$TRAVIS_ARCH" ] ; then export ARCH=arm64 ; fi
  - if [ "amd64" == "$TRAVIS_ARCH" ] ; then export ARCH=amd64 ; fi
  - wget -q https://dl.google.com/go/go1.13.4.linux-$ARCH.tar.gz
  - sudo tar -C /usr/local -xzf go*.tar.gz --strip 1
  - cd sharedlibrary/gotranslate
  - /usr/local/bin/go mod vendor
  - /usr/local/bin/go build -o libgotranslate.so -buildmode=c-shared *.go
  - sudo cp libgotranslate.so /usr/lib/
  - sudo cp libgotranslate.h /usr/include/gotranslate.h
  # Build the Qt GUI application
  - cd ..
  - qmake CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  - make INSTALL_ROOT=appdir -j$(nproc) install
  - mkdir -p appdir/usr/bin ; cp GoTranslate appdir/usr/bin/
  - mkdir -p appdir/usr/share/applications ; cp ../gotranslate.desktop appdir/usr/share/applications/
  - mkdir -p appdir/usr/share/icons/hicolor/128x128/apps/ ; touch appdir/usr/share/icons/hicolor/128x128/apps/gotranslate.png # FIXME
  - find appdir/
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  - ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh GoTranslate*.AppImage*
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
